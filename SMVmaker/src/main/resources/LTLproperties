GP-TM-18;;;G(getUpdate -> (encrypted & !sensitiveData)) & G ((initial & F end) -> (!(getUpdate & from = *compo*) U (authenticated = *compo* | end)));;;The update file is sent encrypted, doesn't contains sensitive data, by an authenticated entity.
GP-TM-19;;;F searchUpdate -> !(F searchUpdate -> (!searchUpdate U (input & cmdSearchUpdate & !searchUpdate)));;;The device can automatically search for updates
GP-TM-24/GP-TM-40;;;G(loginAttempt -> encrypted);;;data are encrypted during authentication phase,credential are not exposed in the traffic
GP-TM-25;;;G ((initial & F end) -> (!( G ((initial & F (end | authenticated = *compo*))-> (( ! (loginFail = *compo*) & !(end | authenticated = *compo*)) U  (end | authenticated = *compo* | ((loginFail = *compo* & ! (end | authenticated = *compo*)) U (end | authenticated = *compo* | (( ! (loginFail = *compo*) & ! (end | authenticated = *compo*)) U (end | authenticated = *compo* | ((loginFail = *compo* & ! (end | authenticated = *compo*))U (end | authenticated = *compo* | (( ! (loginFail = *compo*)& ! (end | authenticated = *compo*)) U (end | authenticated = *compo*| ((loginFail = *compo* & ! (end | authenticated = *compo*))U (end | authenticated = *compo* | (( !(loginFail = *compo*) & ! (end | authenticated = *compo*)) U (end | authenticated = *compo* | ((loginFail = *compo* & ! (end | authenticated = *compo*)) U (end | authenticated = *compo* | (( ! (loginFail = *compo*) &! (end | authenticated = *compo*)) U (end | authenticated = *compo*| ((loginFail = *compo* & ! (end | authenticated = *compo*)) U (end | authenticated = *compo* | ( ! (loginFail = *compo*) U (end | authenticated = *compo*)))))))))))))))))))))))		)-> (! end U lockout)) U end);;;after 5 failed authentication attempts, the account is locked
GP-TM-26;;;G(passwordRecovery ->  !blackListedWord);;;password recovery system doesn't give too much information about existing users
GP-TM-38;;;G(sensitiveData -> encrypted);;;sensitive data are encrypted
GP-TM-42;;;G((initial & F end) -> ( ! (OK & to = *compo* & ! loginAttempt) U (authenticated = *compo* | end))) & G (( initial & F end) -> ( !( Request & to = *compo* & ! loginAttempt) U ( authenticated = *compo* | end )));;;need authentication before receiving and sending data to an other component
GP-TM-48;;; F((from = *dep* & NOK) -> X !initial) | G((from = *dep* & OK) -> initial);;;if an other component is unavailable, this component stay available
GP-TM-52(1);;;G((Request & XSS) -> !X(OK & XSS));;; the component doesn't accept requests that contains XSS
GP-TM-52(2);;;G(SQLinjection -> X(SQL & Request & X(SQL & OK))) ;;; the component doesn't accept requests that contains SQLinjection
GP-TM-53;;;G(!Request -> !blackListedWord);;; error messages doesn't contain too much information