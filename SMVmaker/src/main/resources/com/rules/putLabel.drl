package com.sample.rules

import com.model.lts.Transition;

/*rule "modify a transition"
 	when
    $t : Transition( label == "?/json.htm" )//conditions
    then
    System.out.println("transition exists: " + $t.toString());
   	$t.setName($t.getName() + "boo");
end*/


rule "initial"
	when 
	$t : Transition(source.isInit() == true)
	then
	$t.addParameter("initial=TRUE");
end


rule "getUpdate"
	when
	$t : Transition(isInput(), contain("update", "firmware", "get-update", "get_update") )
	then
	$t.addParameter("getUpdate=TRUE");
end


rule "encrypted" 
	when
	$t : Transition(isEncrypted())
	then
	$t.addParameter("encrypted=TRUE");
end 


/*rule "signature" TODO but how?
	when
	
	then
	
end */


rule "searchUpdate"
	when
	$t : Transition(isReq() == true, isInput() == false, contain("update", "findUpdate", "get_update", ""))
	then
	$t.addParameter("searchUpdate=TRUE");
end


rule "login" //TODO abstraire en une seule transition
	when
	$t1 : Transition(isReq() == true, contain("login", "user"))
	$t2 : Transition(isReq() == false, isOk() == true, getSource() == $t1.getTarget())
	$t3 : Transition(isReq() == true, contain("password", "pass", "pwd"), getSource() == $t2.getTarget())
	then
	$t1.addParameter("loginAttempt=TRUE");
	$t2.addParameter("loginAttempt=TRUE");
	$t3.addParameter("loginAttempt=TRUE");
end

rule "login2"
	when
	$t : Transition(isReq() == true, contain("login", "user"), contain("password", "pass", "pwd"))
	then
	$t.addParameter("loginAttempt=TRUE");
end

rule "login3"
	when
	$t1 : Transition(isReq() == true, contain("login", "user"))
	$t2 : Transition(isReq() == false, isOk() == false, getSource() == $t1.getTarget()) 
	then
	$t1.addParameter("loginAttempt=TRUE");
end


rule "authenticated"  
	when
	$t1 : Transition(isReq() == true, contain("password", "pass", "pwd"))
	$t2 : Transition(isReq() == false, isOk() == true, getSource() == $t1.getTarget()) 
	then
	$t2.addParameter("authenticated=" + $t2.getOtherCompo());
end 

rule "loginFail"
	when
	($t1 : Transition(isReq() == true, contain("login", "user"))
	or
	$t1 : Transition(isReq() == true, contain("password", "pass", "pwd")))
	$t2 : Transition(isReq() == false, isOk() == false, getSource() == $t1.getTarget()) 
	then
	$t2.addParameter("loginFail=" + $t2.getOtherCompo());
end


rule "lockout"
	when
	$t1 : Transition(isReq() == true, contain("password", "pass", "pwd"))
	$t2 : Transition(isReq() == false, isOk() == false, getSource() == $t1.getTarget(), contain("locked", "account locked", "lockout")) 
	then
	$t2.addParameter("lockout=TRUE");
end


rule "passwordRecovery" 
	when
	$t : Transition(isReq() == true, isInput() == true, contain("forgotten password", "password recovery", "forget"))
	then
	$t.addParameter("passwordRecovery=TRUE");
end


/*rule "blackListedWords" 
	when
	
	then
	
end*/ 


rule "input"
	when
	$t : Transition(isInput())
	then
	$t.addParameter("input=TRUE");
end


rule "errorMsg" 
	when
	$t : Transition(isReq() == false, isOk() == false, contain("status", "error", "message"))
	then
	$t.addParameter("errorMsg=TRUE");
end


rule "OK" 
	when
	$t : Transition(isReq() == false, isOk() == true)
	then
	$t.addParameter("OK=TRUE");
end 


rule "NOK" 
	when
	$t : Transition(isReq() == false, isOk() == false)
	then
	$t.addParameter("NOK=TRUE");
end


/*rule "compromised" 
	when
	
	then
	
end*/ 


rule "XSS" 
	when
	$t : Transition(containXSS())
	then
	$t.addParameter("XSS=TRUE");
end


/*rule "sensitiveData" 
	when
	
	then
	
end*/ 


rule "sendDataTo"
	when
	$t : Transition(isReq() == true, !isInput(), !contain("login", "user", "password", "pass", "pwd"))
	then
	$t.addParameter("sendDataTo=" + $t.getOtherCompo());
end


rule "cmdSearchUpdate"
	when
	$t : Transition(isReq() == true, contain("command", "cmd", "order"), contain("searchUpdate", "search_update"))
	then
	$t.addParameter("cmdSearchUpdate=TRUE");
end
